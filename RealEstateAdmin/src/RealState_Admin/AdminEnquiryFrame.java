/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package RealState_Admin;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Minhajul Abedin
 */
public class AdminEnquiryFrame extends javax.swing.JFrame {

   
    /**
     *
     */
    private static final long serialVersionUID = 1L;
    /**
     * Creates new form AdminEnquiryFrame
     */
    String adminID = null; // capture admin id given by constructor called from home page
    String username = null; // store username given by constructor called from home page
    Connection con = null; // store the connection
    PreparedStatement pst = null; // store the statement and execute query.
    Statement st = null; // execute the query
    ResultSet rst = null; // save the result when fetch data from databse tables.
    // variable that store admin choice for sorting and add with default query q.
    String q = null; // default query that will execute if no choice select by admin for sorting.
    String c1 = null; // store the first choice if given
    String c2 = null; // store the second choice if given
    String c3 = null; // store the third choice if given
    String o1 = null; // store the c1 or first choice process is ASC or DESC
    String o2 = null; // store the c2 or second choice process is ASC or DESC
    String o3 = null; // store the c3 or third choice process is ASC or DESC

    public AdminEnquiryFrame() throws SQLException {
        initComponents();
        // variable that store admin choice for sorting and add with default query q.
        c1 = ""; // store the first choice if given
        c2 = ""; // store the second choice if given
        c3 = ""; // store the third choice if given
        o1 = ""; // store the c1 or first choice process is ASC or DESC
        o2 = ""; // store the c2 or second choice process is ASC or DESC
        o3 = ""; // store the c3 or third choice process is ASC or DESC
        // default query that will execute if no choice select by admin for sorting.
        q = "select enquiry_number as Enquiry,e.user_id as User,User_name,e.P_id,Location,Price,Size,Message,e.type from (enquiries e inner join property p on p.p_id=e.P_id) inner join user u on u.User_id=e.user_id ";
        msgBox.setEditable(false);
        sortChoice.addItem("Sort by");
        sortChoice.addItem("Increasing");
        sortChoice.addItem("Decreasing");
        populate_table();
    }

    public AdminEnquiryFrame(String userN, String userid) throws SQLException {
        this();
        adminID = userid;
        username = userN;
        aidField.setText(adminID);
        usnField.setText(username);
        populate_table();
    }

    // data set to the table based on admin choice for sorting by price, size,
    // location ASC and DESC vice versa.
    public void populate_table() throws SQLException {
        try {
            String q1 = q + c1 + o1 + c2 + o2 + c3 + o3;
            System.out.println(q1);
            con = RealState_Admin.mysql_dataBase_connection();
            pst = con.prepareStatement(q1);
            rst = pst.executeQuery();
            enquiryTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            enquiryTable.setModel(RealState_Admin.resultSetToTableModel(rst));
            
            
            
        }
        catch(ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }finally{
            rst.close();
            pst.close();
            con.close();
            
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usnField = new java.awt.Label();
        aidField = new java.awt.Label();
        jLabel3 = new javax.swing.JLabel();
        lgoutButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enquiryTable = new javax.swing.JTable();
        size_Cbox = new javax.swing.JCheckBox();
        price_Cbox = new javax.swing.JCheckBox();
        deleteButton = new javax.swing.JButton();
        enquiryField = new javax.swing.JTextField();
        location_Cbox = new javax.swing.JCheckBox();
        sortChoice = new java.awt.Choice();
        viewButton = new javax.swing.JButton();
        vsrtField = new java.awt.Label();
        homepageButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        jLabel7 = new javax.swing.JLabel();
        label2 = new java.awt.Label();
        jLabel5 = new javax.swing.JLabel();
        label3 = new java.awt.Label();
        jLabel8 = new javax.swing.JLabel();
        msgBox = new java.awt.TextArea();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Admin Id:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Username:");

        usnField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        usnField.setText("U_name");

        aidField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        aidField.setText("A_id");

        jLabel3.setFont(new java.awt.Font("Tekton Pro Cond", 2, 36)); // NOI18N
        jLabel3.setText("RealSTate.co");

        lgoutButton.setBackground(new java.awt.Color(255, 204, 204));
        lgoutButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        lgoutButton.setText("Log out");
        lgoutButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 255, 204), new java.awt.Color(255, 204, 51), new java.awt.Color(153, 255, 204), new java.awt.Color(255, 218, 124)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 204, 255), new java.awt.Color(255, 255, 153), new java.awt.Color(204, 204, 255), new java.awt.Color(255, 255, 204))));
        lgoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgoutButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Minhajul Abedin:-18301224");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lgoutButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aidField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usnField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel3)
                                .addGap(6, 6, 6)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(aidField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(usnField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lgoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE))))
        );

        enquiryTable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        enquiryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "null"
            }
        ) {
            /**
             *
             */
            private static final long serialVersionUID = 1L;
            boolean[] canEdit = new boolean[] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        enquiryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enquiryTableMouseClicked(evt);
            }
        });
        enquiryTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                enquiryTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(enquiryTable);

        size_Cbox.setText("Size");
        size_Cbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                size_CboxActionPerformed(evt);
            }
        });

        price_Cbox.setText("Price");
        price_Cbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                price_CboxActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.setToolTipText("");
        deleteButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 255, 204), new java.awt.Color(255, 204, 51), new java.awt.Color(153, 255, 204), new java.awt.Color(255, 218, 124)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 204, 255), new java.awt.Color(255, 255, 153), new java.awt.Color(204, 204, 255), new java.awt.Color(255, 255, 204))));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        enquiryField.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        enquiryField.setForeground(new java.awt.Color(153, 153, 153));
        enquiryField.setText("Enquiry Number");
        enquiryField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enquiryFieldMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                enquiryFieldMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                enquiryFieldMouseExited(evt);
            }
        });
        enquiryField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enquiryFieldActionPerformed(evt);
            }
        });

        location_Cbox.setText("Location");
        location_Cbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                location_CboxActionPerformed(evt);
            }
        });

        sortChoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sortChoiceMousePressed(evt);
            }
        });
        sortChoice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sortChoiceItemStateChanged(evt);
            }
        });
        sortChoice.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                sortChoicePropertyChange(evt);
            }
        });

        viewButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        viewButton.setText("View");
        viewButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 255, 204), new java.awt.Color(255, 204, 51), new java.awt.Color(153, 255, 204), new java.awt.Color(255, 218, 124)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 204, 255), new java.awt.Color(255, 255, 153), new java.awt.Color(204, 204, 255), new java.awt.Color(255, 255, 204))));
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        vsrtField.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        vsrtField.setForeground(new java.awt.Color(51, 51, 255));

        homepageButton.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        homepageButton.setText("Homepage");
        homepageButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 255, 204), new java.awt.Color(255, 204, 51), new java.awt.Color(153, 255, 204), new java.awt.Color(255, 218, 124)), new javax.swing.border.MatteBorder(null)));
        homepageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homepageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(price_Cbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(size_Cbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(location_Cbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vsrtField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sortChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(homepageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(enquiryField, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(homepageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(location_Cbox)
                        .addComponent(size_Cbox)
                        .addComponent(price_Cbox))
                    .addComponent(sortChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vsrtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(enquiryField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteButton)
                    .addComponent(viewButton))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Monotype Corsiva", 1, 36)); // NOI18N
        jLabel4.setText("View Enquiry");

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 16)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Username:");

        label1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        label1.setName(""); // NOI18N

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 16)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Property Id:");

        label2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Type:");

        label3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 16)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Message:");

        msgBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(msgBox, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel4)
                .addGap(12, 12, 12)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msgBox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //delete the enquriy based on enquiry number given by admin.
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if(!enquiryField.getText().equals("") && enquiryField.getText().matches("[0-9]+")){
            try {
                con=RealState_Admin.mysql_dataBase_connection();
                String query="DELETE FROM enquiries where enquiry_number=\""+enquiryField.getText()+"\"";
                pst=con.prepareStatement(query);
                int r=pst.executeUpdate();
                if(r==1){
                    populate_table();
                    label1.setText("Removed");
                    label2.setText("Removed");
                    label3.setText("Removed");
                    msgBox.setText("Removed Sucessfully");
                    JOptionPane.showMessageDialog(null,"Removed successfully." );
                }
                else {
                    label1.setText("Wrong information");
                    label2.setText("Wrong Information");
                    label3.setText("Wrong Information");
                    msgBox.setText("Wrong Information");
                    JOptionPane.showMessageDialog(null,"Wrong enquiry number." );
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    pst.close();
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Wrong enquiry number.");
        }
        
        
        
    }//GEN-LAST:event_deleteButtonActionPerformed
    //decistion makeing based on admin choice for sorting. 
    private void price_CboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_price_CboxActionPerformed
        
        if(price_Cbox.isSelected()){
            if(c1=="")
            {
                c1=" ORDER BY price";
                
            }
            else if(c2==""){
                c2=",price";
            }
            else{
                c3=",price";
            }
            
        }
        else{
            if(c1.equals(" ORDER BY price") )
            {
                if(!c2.equals(""))
                    c1=" ORDER BY "+c2.substring(1);
                else{
                    c1="";
                }
                c2=c3;
                c3="";
                o1=o2;
                o2=o3;
                o3="";
                
            }
            else if(c2==",price"){
                c2=c3;
                c3="";
                o2=o3;
                o3="";
            }
            else{
                c3="";
                o3="";
            }
            
            
        }
        if(c1.equals(""))
            vsrtField.setText("");
        else
            vsrtField.setText(c1.substring(10)+" "+o1+" "+c2+" "+o2+" "+c3+" "+o3);
        try {
            populate_table();
        } catch (SQLException ex) {
            Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_price_CboxActionPerformed
    
    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        if(!enquiryField.getText().equals("") && enquiryField.getText().matches("[0-9]+")){
            try {
                con=RealState_Admin.mysql_dataBase_connection();
                String query="select user_name,p_id,type,message FROM enquiries e inner join user u on e.user_id =u.user_id where enquiry_number=\""+enquiryField.getText()+"\"";
                pst=con.prepareStatement(query);
                rst=pst.executeQuery();
                if(rst.next())
                {
                    label1.setText(rst.getString("user_name"));
                    label2.setText(rst.getString("p_id"));
                    label3.setText(rst.getString("type"));
                    
                    msgBox.setText(rst.getString("message"));
                    
                    
                }
                else{
                    label1.setText("Not Found");
                    label2.setText("Not Found");
                    label3.setText("Not Found");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                
                try {
                    rst.close();
                    pst.close();
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Wrong enquiry number.");
        }
        
        
    }//GEN-LAST:event_viewButtonActionPerformed
    
    private void homepageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homepageButtonActionPerformed
        AdminFrontFrame afp;
        try {
            afp = new AdminFrontFrame(username,adminID);
            afp.setVisible(true);
            afp.setLocationRelativeTo(this);
            this.setVisible(false);
        } catch (SQLException ex) {
            Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_homepageButtonActionPerformed
    
    private void size_CboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_size_CboxActionPerformed
        if(size_Cbox.isSelected()){
            if(c1=="")
            {
                c1=" ORDER BY size";
                
            }
            else if(c2==""){
                c2=",size";
            }
            else{
                c3=",size";
            }
            
        }
        else{
            if(c1.equals(" ORDER BY size"))
            {
                
                if(!c2.equals(""))
                    c1=" ORDER BY "+c2.substring(1);
                else{
                    c1="";
                }
                c2=c3;
                c3="";
                o1=o2;
                o2=o3;
                o3="";
                
            }
            else if(c2==",size"){
                c2=c3;
                c3="";
                o2=o3;
                o3="";
            }
            else{
                c3="";
                o3="";
            }
            
            
        }
        if(c1.equals(""))
            vsrtField.setText("");
        else
            vsrtField.setText(c1.substring(10)+" "+o1+" "+c2+" "+o2+" "+c3+" "+o3);
        try {
            populate_table();
        } catch (SQLException ex) {
            Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_size_CboxActionPerformed
    
    private void location_CboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_location_CboxActionPerformed
        if(location_Cbox.isSelected()){
            if(c1=="")
            {
                c1=" ORDER BY location";
                
            }
            else if(c2==""){
                c2=",location";
            }
            else{
                c3=",location";
            }
            
        }
        else{
            if(c1.equals(" ORDER BY location"))
            {
                if(!c2.equals(""))
                    c1=" ORDER BY "+c2.substring(1);
                else{
                    c1="";
                }
                c2=c3;
                c3="";
                o1=o2;
                o2=o3;
                o3="";
                
            }
            else if(c2==",location"){
                c2=c3;
                c3="";
                o2=o3;
                o3="";
            }
            else{
                c3="";
                o3="";
            }
            
            
        }
        if(c1.equals(""))
            vsrtField.setText("");
        else
            vsrtField.setText(c1.substring(10)+" "+o1+" "+c2+" "+o2+" "+c3+" "+o3);
        try {
            populate_table();
        } catch (SQLException ex) {
            Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_location_CboxActionPerformed
    
    private void sortChoicePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_sortChoicePropertyChange
        
    }//GEN-LAST:event_sortChoicePropertyChange
    
    private void sortChoiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sortChoiceItemStateChanged
        
        String property=sortChoice.getSelectedItem();
        if(property=="Increasing") property =" ASC ";
        else if(property=="Decreasing") property = " DESC ";
        if(property!="Sort by"){
            if(c1!="" && c2=="") o1=property;
            else if(c2!=""&& c3=="") o2=property;
            else if (c3!="")o3=property;
        }
        else{
            if(c1!="" && c2=="") o1="";
            else if(c2!=""&& c3=="") o2="";
            else o3="";
        }
        if(c1.equals(""))
            vsrtField.setText("");
        else
            vsrtField.setText(c1.substring(10)+" "+o1+" "+c2+" "+o2+" "+c3+" "+o3);
        try {
            populate_table();
        } catch (SQLException ex) {
            Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_sortChoiceItemStateChanged
    
    private void enquiryFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enquiryFieldActionPerformed
        
    }//GEN-LAST:event_enquiryFieldActionPerformed
    
    private void enquiryFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enquiryFieldMouseClicked
        
        enquiryField.setForeground(Color.black);
        
        
    }//GEN-LAST:event_enquiryFieldMouseClicked
    
    private void enquiryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enquiryTableMouseClicked
        if(enquiryTable.getSelectedRow()>=0){
            enquiryField.setText(enquiryTable.getValueAt(enquiryTable.getSelectedRow(),0).toString());
            try {
                con=RealState_Admin.mysql_dataBase_connection();
                String query="select user_name,p_id,type,message FROM enquiries e inner join user u on e.user_id =u.user_id where enquiry_number=?";
                pst=con.prepareStatement(query);
                pst.setInt(1, (int)enquiryTable.getValueAt(enquiryTable.getSelectedRow(),0));
                rst=pst.executeQuery();
                if(rst.next())
                {
                    label1.setText(rst.getString("user_name"));
                    label2.setText(rst.getString("p_id"));
                    label3.setText(rst.getString("type"));
                    
                    msgBox.setText(rst.getString("message"));
                    
                    
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                
                try {
                    rst.close();
                    pst.close();
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else if(enquiryField.getText().equals("User Id")){
            enquiryField.setText("");
        }          
    }//GEN-LAST:event_enquiryTableMouseClicked
    
    private void enquiryFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enquiryFieldMouseExited
        if(enquiryField.getText().equals(""))
        {
            enquiryField.setForeground(new java.awt.Color(153, 153, 153));
            enquiryField.setText("Enquiry Number");
            
        } 
    }//GEN-LAST:event_enquiryFieldMouseExited
    
    private void enquiryFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enquiryFieldMouseEntered
        if(enquiryField.getText().equals("Enquiry Number"))
        {
            enquiryField.setText("");
            enquiryField.setForeground(Color.black);
        } 
    }//GEN-LAST:event_enquiryFieldMouseEntered
    
    private void lgoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgoutButtonActionPerformed
        AdminLoginFrame alf = new AdminLoginFrame();
        alf.setVisible(true);
        alf.setLocationRelativeTo(this);
        this.setVisible(false);
    }//GEN-LAST:event_lgoutButtonActionPerformed
    
    private void sortChoiceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortChoiceMousePressed
        String property=sortChoice.getSelectedItem();
        if(property=="Increasing") property =" ASC ";
        else if(property=="Decreasing") property = " DESC ";
        if(property!="Sort by"){
            if(c1!="" && c2=="") o1=property;
            else if(c2!=""&& c3=="") o2=property;
            else if (c3!="")o3=property;
        }
        else{
            if(c1!="" && c2=="") o1="";
            else if(c2!=""&& c3=="") o2="";
            else o3="";
        }
        if(c1.equals(""))
            vsrtField.setText("");
        else
            vsrtField.setText(c1.substring(10)+" "+o1+" "+c2+" "+o2+" "+c3+" "+o3);
        try {
            populate_table();
        } catch (SQLException ex) {
            Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_sortChoiceMousePressed

    private void enquiryTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enquiryTableKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_UP || evt.getKeyCode()==KeyEvent.VK_DOWN ||evt.getKeyCode()==KeyEvent.VK_ENTER){
          if(enquiryTable.getSelectedRow()>=0){
            enquiryField.setText(enquiryTable.getValueAt(enquiryTable.getSelectedRow(),0).toString());
            try {
                con=RealState_Admin.mysql_dataBase_connection();
                String query="select user_name,p_id,type,message FROM enquiries e inner join user u on e.user_id =u.user_id where enquiry_number=?";
                pst=con.prepareStatement(query);
                pst.setInt(1, (int)enquiryTable.getValueAt(enquiryTable.getSelectedRow(),0));
                rst=pst.executeQuery();
                if(rst.next())
                {
                    label1.setText(rst.getString("user_name"));
                    label2.setText(rst.getString("p_id"));
                    label3.setText(rst.getString("type"));
                    
                    msgBox.setText(rst.getString("message"));
                    
                    
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                
                try {
                    rst.close();
                    pst.close();
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else if(enquiryField.getText().equals("User Id")){
            enquiryField.setText("");
        }  
        }
    }//GEN-LAST:event_enquiryTableKeyPressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminEnquiryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminEnquiryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminEnquiryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminEnquiryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                AdminEnquiryFrame aef=new AdminEnquiryFrame();
                aef.setLocationRelativeTo(null);
                aef.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(AdminEnquiryFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label aidField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField enquiryField;
    private javax.swing.JTable enquiryTable;
    private javax.swing.JButton homepageButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private javax.swing.JButton lgoutButton;
    private javax.swing.JCheckBox location_Cbox;
    private java.awt.TextArea msgBox;
    private javax.swing.JCheckBox price_Cbox;
    private javax.swing.JCheckBox size_Cbox;
    private java.awt.Choice sortChoice;
    private java.awt.Label usnField;
    private javax.swing.JButton viewButton;
    private java.awt.Label vsrtField;
    // End of variables declaration//GEN-END:variables
}
